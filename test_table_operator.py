import unittest

from table_operator import TableOperator

class TestTableOperator(unittest.TestCase):

    def test_eq(self):
        self.assertEqual(TableOperator.SELECTION, 'select')
        self.assertEqual(TableOperator.PROJECTION, 'pi')
        self.assertNotEqual(TableOperator.SELECTION, 'select2')
        self.assertNotEqual(TableOperator.PROJECTION, '2pi')
        self.assertEqual(TableOperator.SELECTION, TableOperator.SELECTION)
        self.assertNotEqual(TableOperator.SELECTION, TableOperator.PROJECTION)
        self.assertNotEqual(TableOperator.SELECTION, TableOperator.NONE)

    def test_bool(self):
        self.assertFalse(TableOperator.NONE)
        self.assertTrue(TableOperator.SELECTION)
        self.assertTrue(TableOperator.PROJECTION)
        self.assertTrue(TableOperator.CROSS_JOIN)
        self.assertTrue(TableOperator.NATURAL_JOIN)
        self.assertTrue(TableOperator.LEFT_OUTER_JOIN)
        self.assertTrue(TableOperator.RIGHT_OUTER_JOIN)
        self.assertTrue(TableOperator.FULL_OUTER_JOIN)
        self.assertTrue(TableOperator.UNION)
        self.assertTrue(TableOperator.INTERSECTION)
        self.assertTrue(TableOperator.MINUS)
        self.assertTrue(TableOperator.DIVISION)

    def test_parametric(self):
        self.assertTrue(TableOperator.NONE.parametric(0))
        self.assertFalse(TableOperator.NONE.parametric(1))
        self.assertFalse(TableOperator.SELECTION.parametric(0))
        self.assertFalse(TableOperator.SELECTION.parametric(0))
        self.assertTrue(TableOperator.SELECTION.parametric(2))
        self.assertFalse(TableOperator.PROJECTION.parametric(0))
        self.assertTrue(TableOperator.PROJECTION.parametric(1))
        self.assertTrue(TableOperator.PROJECTION.parametric(2))
        self.assertTrue(TableOperator.CROSS_JOIN.parametric(0))
        self.assertFalse(TableOperator.CROSS_JOIN.parametric(1))
        self.assertFalse(TableOperator.CROSS_JOIN.parametric(2))
        self.assertTrue(TableOperator.NATURAL_JOIN.parametric(0))
        self.assertFalse(TableOperator.NATURAL_JOIN.parametric(1))
        self.assertTrue(TableOperator.NATURAL_JOIN.parametric(2))
        self.assertTrue(TableOperator.LEFT_OUTER_JOIN.parametric(0))
        self.assertFalse(TableOperator.LEFT_OUTER_JOIN.parametric(1))
        self.assertTrue(TableOperator.LEFT_OUTER_JOIN.parametric(2))
        self.assertTrue(TableOperator.RIGHT_OUTER_JOIN.parametric(0))
        self.assertFalse(TableOperator.RIGHT_OUTER_JOIN.parametric(1))
        self.assertTrue(TableOperator.RIGHT_OUTER_JOIN.parametric(2))
        self.assertTrue(TableOperator.FULL_OUTER_JOIN.parametric(0))
        self.assertFalse(TableOperator.FULL_OUTER_JOIN.parametric(1))
        self.assertTrue(TableOperator.FULL_OUTER_JOIN.parametric(2))
        self.assertTrue(TableOperator.UNION.parametric(0))
        self.assertFalse(TableOperator.UNION.parametric(1))
        self.assertFalse(TableOperator.UNION.parametric(2))
        self.assertTrue(TableOperator.INTERSECTION.parametric(0))
        self.assertFalse(TableOperator.INTERSECTION.parametric(1))
        self.assertFalse(TableOperator.INTERSECTION.parametric(2))
        self.assertTrue(TableOperator.MINUS.parametric(0))
        self.assertFalse(TableOperator.MINUS.parametric(1))
        self.assertFalse(TableOperator.MINUS.parametric(2))
        self.assertTrue(TableOperator.DIVISION.parametric(0))
        self.assertFalse(TableOperator.DIVISION.parametric(1))
        self.assertFalse(TableOperator.DIVISION.parametric(2))
